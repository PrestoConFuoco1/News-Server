


-- entry 1


                                        Table "news.category"
       Column       |  Type   | Collation | Nullable |                    Default                    
--------------------+---------+-----------+----------+-----------------------------------------------
 category_id        | integer |           | not null | nextval('category_category_id_seq'::regclass)
 parent_category_id | integer |           |          | 1
 name               | text    |           | not null | 
Indexes:
    "category_pkey" PRIMARY KEY, btree (category_id)
    "category_name_key" UNIQUE CONSTRAINT, btree (name)
Check constraints:
    "category_name_check" CHECK (name <> ''::text)
Foreign-key constraints:
    "category_parent_category_id_fkey" FOREIGN KEY (parent_category_id) REFERENCES category(category_id) ON DELETE CASCADE
Referenced by:
    TABLE "category" CONSTRAINT "category_parent_category_id_fkey" FOREIGN KEY (parent_category_id) REFERENCES category(category_id) ON DELETE CASCADE
    TABLE "draft" CONSTRAINT "draft_category_id_fkey" FOREIGN KEY (category_id) REFERENCES category(category_id) ON DELETE SET DEFAULT
    TABLE "post" CONSTRAINT "post_category_id_fkey" FOREIGN KEY (category_id) REFERENCES category(category_id) ON DELETE SET DEFAULT


-- entry 2

                               Table "news.tag"
 Column |  Type   | Collation | Nullable |               Default               
--------+---------+-----------+----------+-------------------------------------
 tag_id | integer |           | not null | nextval('tag_tag_id_seq'::regclass)
 name   | text    |           | not null | 
Indexes:
    "tag_pkey" PRIMARY KEY, btree (tag_id)
    "tag_name_key" UNIQUE CONSTRAINT, btree (name)
Check constraints:
    "tag_name_check" CHECK (name <> ''::text)
Referenced by:
    TABLE "draft_tag" CONSTRAINT "draft_tag_tag_id_fkey" FOREIGN KEY (tag_id) REFERENCES tag(tag_id) ON DELETE CASCADE
    TABLE "post_tag" CONSTRAINT "post_tag_tag_id_fkey" FOREIGN KEY (tag_id) REFERENCES tag(tag_id) ON DELETE CASCADE


-- entry 3
                                   Table "news.users"
    Column     |  Type   | Collation | Nullable |                Default                 
---------------+---------+-----------+----------+----------------------------------------
 user_id       | integer |           | not null | nextval('users_user_id_seq'::regclass)
 firstname     | text    |           | not null | 
 lastname      | text    |           | not null | 
 image         | text    |           |          | 
 login         | text    |           | not null | 
 pass_hash     | text    |           | not null | 
 creation_date | date    |           | not null | CURRENT_DATE
 is_admin      | boolean |           | not null | false
Indexes:
    "user_pkey" PRIMARY KEY, btree (user_id)
    "users_login_key" UNIQUE CONSTRAINT, btree (login)
Check constraints:
    "users_firstname_check" CHECK (firstname <> ''::text)
    "users_image_check" CHECK (image <> ''::text)
    "users_lastname_check" CHECK (lastname <> ''::text)
    "users_login_check" CHECK (login <> ''::text)
    "users_pass_hash_check" CHECK (pass_hash <> ''::text)
Referenced by:
    TABLE "author" CONSTRAINT "author_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
    TABLE "comment" CONSTRAINT "comment_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(user_id)
    TABLE "token" CONSTRAINT "token_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE




-- entry 4

                                   Table "news.author"
   Column    |  Type   | Collation | Nullable |                  Default                  
-------------+---------+-----------+----------+-------------------------------------------
 author_id   | integer |           | not null | nextval('author_author_id_seq'::regclass)
 user_id     | integer |           | not null | 1
 description | text    |           | not null | 
Indexes:
    "author_pkey" PRIMARY KEY, btree (author_id)
    "author_user_id_key" UNIQUE CONSTRAINT, btree (user_id)
Check constraints:
    "author_description_check" CHECK (description <> ''::text)
Foreign-key constraints:
    "author_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
Referenced by:
    TABLE "draft" CONSTRAINT "draft_author_id_fkey" FOREIGN KEY (author_id) REFERENCES author(author_id) ON DELETE SET DEFAULT
    TABLE "post" CONSTRAINT "post_author_id_fkey" FOREIGN KEY (author_id) REFERENCES author(author_id) ON DELETE SET DEFAULT

-- entry 5

                 Table "news.token"
 Column  |  Type   | Collation | Nullable | Default 
---------+---------+-----------+----------+---------
 user_id | integer |           | not null | 
 token   | text    |           | not null | 
Indexes:
    "token_pkey" PRIMARY KEY, btree (token)
    "token_user_id_key" UNIQUE CONSTRAINT, btree (user_id)
Check constraints:
    "token_token_check" CHECK (token <> ''::text)
Foreign-key constraints:
    "token_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE



-- entry 6

                                   Table "news.post"
    Column     |  Type   | Collation | Nullable |                Default                
---------------+---------+-----------+----------+---------------------------------------
 post_id       | integer |           | not null | nextval('post_post_id_seq'::regclass)
 title         | text    |           | not null | 
 creation_date | date    |           | not null | CURRENT_DATE
 author_id     | integer |           | not null | 1
 category_id   | integer |           | not null | 1
 content       | text    |           | not null | 
 photo         | text    |           |          | 
 extra_photos  | text[]  |           |          | 
Indexes:
    "post_pkey" PRIMARY KEY, btree (post_id)
Check constraints:
    "post_content_check" CHECK (content <> ''::text)
    "post_photo_check" CHECK (photo <> ''::text)
    "post_title_check" CHECK (title <> ''::text)
Foreign-key constraints:
    "post_author_id_fkey" FOREIGN KEY (author_id) REFERENCES author(author_id) ON DELETE SET DEFAULT
    "post_category_id_fkey" FOREIGN KEY (category_id) REFERENCES category(category_id) ON DELETE SET DEFAULT
Referenced by:
    TABLE "comment" CONSTRAINT "comment_post_id_fkey" FOREIGN KEY (post_id) REFERENCES post(post_id) ON DELETE CASCADE
    TABLE "draft" CONSTRAINT "draft_post_id_fkey" FOREIGN KEY (post_id) REFERENCES post(post_id)
    TABLE "post_tag" CONSTRAINT "post_tag_post_id_fkey" FOREIGN KEY (post_id) REFERENCES post(post_id) ON DELETE CASCADE

-- entry 7

               Table "news.post_tag"
 Column  |  Type   | Collation | Nullable | Default 
---------+---------+-----------+----------+---------
 post_id | integer |           | not null | 
 tag_id  | integer |           | not null | 
Indexes:
    "post_tag_post_id_tag_id_key" UNIQUE CONSTRAINT, btree (post_id, tag_id)
Foreign-key constraints:
    "post_tag_post_id_fkey" FOREIGN KEY (post_id) REFERENCES post(post_id) ON DELETE CASCADE
    "post_tag_tag_id_fkey" FOREIGN KEY (tag_id) REFERENCES tag(tag_id) ON DELETE CASCADE


-- entry 8

                                   Table "news.comment"
   Column   |  Type   | Collation | Nullable |                   Default                   
------------+---------+-----------+----------+---------------------------------------------
 comment_id | integer |           | not null | nextval('comment_comment_id_seq'::regclass)
 post_id    | integer |           | not null | 
 content    | text    |           | not null | 
 user_id    | integer |           | not null | 
Indexes:
    "comment_pkey" PRIMARY KEY, btree (comment_id)
Check constraints:
    "comment_content_check" CHECK (content <> ''::text)
Foreign-key constraints:
    "comment_post_id_fkey" FOREIGN KEY (post_id) REFERENCES post(post_id) ON DELETE CASCADE
    "comment_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(user_id)



-- entry 9
                                    Table "news.draft"
    Column     |  Type   | Collation | Nullable |                 Default                 
---------------+---------+-----------+----------+-----------------------------------------
 draft_id      | integer |           | not null | nextval('draft_draft_id_seq'::regclass)
 title         | text    |           | not null | 
 creation_date | date    |           | not null | CURRENT_DATE
 author_id     | integer |           | not null | 1
 category_id   | integer |           | not null | 1
 content       | text    |           | not null | 
 photo         | text    |           |          | 
 extra_photos  | text[]  |           |          | 
 post_id       | integer |           |          | 
Indexes:
    "draft_pkey" PRIMARY KEY, btree (draft_id)
    "draft_post_id_key" UNIQUE CONSTRAINT, btree (post_id)
Check constraints:
    "draft_content_check" CHECK (content <> ''::text)
    "draft_photo_check" CHECK (photo <> ''::text)
    "draft_title_check" CHECK (title <> ''::text)
Foreign-key constraints:
    "draft_author_id_fkey" FOREIGN KEY (author_id) REFERENCES author(author_id) ON DELETE SET DEFAULT
    "draft_category_id_fkey" FOREIGN KEY (category_id) REFERENCES category(category_id) ON DELETE SET DEFAULT
    "draft_post_id_fkey" FOREIGN KEY (post_id) REFERENCES post(post_id)
Referenced by:
    TABLE "draft_tag" CONSTRAINT "draft_tag_draft_id_fkey" FOREIGN KEY (draft_id) REFERENCES draft(draft_id) ON DELETE CASCADE

-- entry 10
               Table "news.draft_tag"
  Column  |  Type   | Collation | Nullable | Default 
----------+---------+-----------+----------+---------
 draft_id | integer |           | not null | 
 tag_id   | integer |           | not null | 
Indexes:
    "draft_tag_draft_id_tag_id_key" UNIQUE CONSTRAINT, btree (draft_id, tag_id)
Foreign-key constraints:
    "draft_tag_draft_id_fkey" FOREIGN KEY (draft_id) REFERENCES draft(draft_id) ON DELETE CASCADE
    "draft_tag_tag_id_fkey" FOREIGN KEY (tag_id) REFERENCES tag(tag_id) ON DELETE CASCADE







-- view 1

CREATE OR REPLACE VIEW news.get_authors AS
 SELECT a.author_id,
    a.description,
    a.user_id,
    u.firstname,
    u.lastname,
    u.image,
    u.login,
    '***'::text AS pass,
    u.creation_date
   FROM author a
     JOIN users u ON a.user_id = u.user_id

-- view 2

CREATE OR REPLACE VIEW news.get_categories AS
 WITH RECURSIVE temp2(category_id, arrcid, arrname) AS (
         SELECT category.category_id,
            ARRAY[]::integer[] AS "array",
            ARRAY[]::text[] AS "array"
           FROM category
          WHERE category.parent_category_id IS NULL
        UNION ALL
         SELECT c.category_id,
            array_prepend(c.category_id, t.arrcid) AS array_prepend,
            array_prepend(c.name, t.arrname) AS array_prepend
           FROM category c
             JOIN temp2 t ON c.parent_category_id = t.category_id
          WHERE c.parent_category_id IS NOT NULL
        )
 SELECT temp2.category_id,
    temp2.arrcid AS catids,
    temp2.arrname AS catnames
   FROM temp2

-- view 3

CREATE OR REPLACE VIEW news.get_comments AS
 SELECT c.comment_id,
    c.content,
    c.post_id,
    u.user_id,
    u.firstname,
    u.lastname,
    u.image,
    u.login,
    '***'::text AS pass_hash,
    u.creation_date,
    NULL::text AS is_admin
   FROM comment c
     JOIN users u ON c.user_id = u.user_id

-- view 4

CREATE OR REPLACE VIEW news.get_tags AS
 SELECT tag.tag_id,
    tag.name
   FROM tag

-- view 5

CREATE OR REPLACE VIEW news.get_users_by_token AS
 SELECT u.user_id,
    u.firstname,
    u.lastname,
    u.image,
    u.login,
    u.pass_hash,
    u.creation_date,
    u.is_admin,
    t.token
   FROM token t
     JOIN users u ON t.user_id = u.user_id

-- view 6

CREATE OR REPLACE VIEW news.draft_tag_total AS
 SELECT a.draft_id,
    a.title,
    a.creation_date,
    a.author_id,
    a.category_id,
    COALESCE(array_agg(t.tag_id) FILTER (WHERE t.tag_id IS NOT NULL), ARRAY[]::integer[]) AS tagids,
    COALESCE(array_agg(t.name) FILTER (WHERE t.name IS NOT NULL), ARRAY[]::name[]::text[]) AS tagnames,
    a.content,
    a.photo,
    a.extra_photos,
    a.post_id
   FROM draft a
     LEFT JOIN draft_tag dt ON a.draft_id = dt.draft_id
     LEFT JOIN tag t ON dt.tag_id = t.tag_id
  GROUP BY a.draft_id

-- view 7

CREATE OR REPLACE VIEW news.get_drafts AS
 SELECT td.draft_id,
    td.title,
    td.creation_date AS draft_creation_date,
    td.author_id,
    a.description AS author_description,
    u.user_id,
    u.firstname AS user_firstname,
    u.lastname AS user_lastname,
    u.image AS user_image,
    u.login AS user_login,
    '***'::text AS user_pass,
    u.creation_date AS user_creation_date,
    NULL::text AS user_is_admin,
    td.tagids,
    td.tagnames,
    c.catids,
    c.catnames,
    td.content,
    td.photo,
    td.extra_photos,
    td.post_id
   FROM draft_tag_total td
     JOIN author a ON td.author_id = a.author_id
     JOIN users u ON a.user_id = u.user_id
     JOIN get_categories c ON td.category_id = c.category_id

-- view 8

CREATE OR REPLACE VIEW news.post_tag_total AS
 SELECT p.post_id,
    p.title,
    p.creation_date,
    p.author_id,
    p.category_id,
    COALESCE(array_agg(t.tag_id) FILTER (WHERE t.tag_id IS NOT NULL), ARRAY[]::integer[]) AS tagids,
    COALESCE(array_agg(t.name) FILTER (WHERE t.name IS NOT NULL), ARRAY[]::text[]) AS tagnames,
    p.content,
    p.photo,
    COALESCE(p.extra_photos, ARRAY[]::text[]) AS extra_photos
   FROM post p
     LEFT JOIN post_tag pt ON p.post_id = pt.post_id
     LEFT JOIN tag t ON pt.tag_id = t.tag_id
  GROUP BY p.post_id


-- view 9

CREATE OR REPLACE VIEW news.get_posts AS
 SELECT tp.post_id,
    tp.title,
    tp.creation_date AS post_creation_date,
    tp.author_id,
    a.description AS author_description,
    u.user_id,
    u.firstname AS user_firstname,
    u.lastname AS user_lastname,
    u.image AS user_image,
    u.login AS user_login,
    '***'::text AS user_pass,
    u.creation_date AS user_creation_date,
    NULL::text AS user_is_admin,
    tp.tagids,
    tp.tagnames,
    c.catids,
    c.catnames,
    tp.content,
    tp.photo,
    tp.extra_photos
   FROM post_tag_total tp
     JOIN author a ON tp.author_id = a.author_id
     JOIN users u ON a.user_id = u.user_id
     JOIN get_categories c ON tp.category_id = c.category_id













