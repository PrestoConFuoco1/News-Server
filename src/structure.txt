
the scheme of server work is next:

warp
---------------------------
RequestToAction  (request -> type of action)
---------------------------
ActionToQueries  (action -> database queries)
---------------------------
  (database queries)

-----------------------------------------------
API:

Получить новости
GET /posts
Параметры:
{created_at/created_at__lt/created_at__gt}={YYYY-mm-dd}
tag={tag_id}, {tags__in/tag__all}=[{tag_id},...,{tag_id}]
search={pattern}
sort={d/a/c/p}{a/d} # дата/автор/категория/количество фотографий, возрастание/убывание

Коды ответов:
200 - OK
-------------------------------------------------
-------------------------------------------------
Авторы

Получить авторов
/authors/get

Коды ответа:
200 - OK
404 - если пользователь не админ
-------------------------------------------------

Редактировать автора:
/authors/edit
Параметры:
author_id={author_id}
description={текст}

Коды ответа:
200 - OK
400 - такого автора нет
404 - если не админ
------------------------------------------------------

Создать автора:
/authors/create
Параметры:
user={user_id}
description={текст}

Коды ответа:
200 - OK
400 - (? если автор с таким пользователем уже есть, можно ли создавать второго? по идее да, может он на разные темы пишет)
      upd: если автор уже есть, то это ошибка
404 - если не админ
-------------------------------------------------------

Удалить автора

/authors/delete
Параметры:
author_id={author_id}

200 - OK
404 - если не админ
--------------------------------------------------------
--------------------------------------------------------

КАТЕГОРИИ
--------------------------------------------------------

Получение категорий:
/categories/get

Коды ответа:
200 - ОК

--------------------------------------------------------
Создание категории:
/categories/create

Параметры:
title={текст}
parent_category_id={id род. директории} optional

Коды ответа:
200 - OK
400 - такая категория уже еть
404 - если не админ

--------------------------------------------------------
Удаление категории:
/categories/delete

Параметры:
cat_id={id категории}

Коды ответа:
200 - ОК
400 - такой категории нет
404 - если не админ

--------------------------------------------------------
Редактирование категории:
/categories/edit

Параметры:
cat_id={id категории}
title={текст}

Коды ответа:
200 - ОК
400 - такой категории нет
404 - если не админ
--------------------------------------------------------

Теги - всё то же самое, что и для категорий.

--------------------------------------------------------
ЧЕРНОВИКИ

у каждой новости может быть только один черновик.

POST /draft/create

Параметры:
content={текст}

Коды ответа:
200 - OK
400 - нет такого поста
404 - пользователь не является автором

--------------------------------------------------------
Редактирование черновика
POST /draft/edit

post_id={id поста}
draft_id={id черновика}
content={текст}

Коды ответа:
200 - OK
400 - нет такого поста/нет такого черновика
404 - пользователь не является автором

--------------------------------------------------------
Просмотр черновиков
/draft/get

post_id={id поста}

Коды ответа:
200
400 - нет такого поста
404 - пользователь не является автором
--------------------------------------------------------
Удаление черновика:
/draft/delete

post_id={id поста}
draft_id={id черновика}

200 - OK
400 - нет такого поста/нет такого черновика
404 - пользователь не является автором
--------------------------------------------------------
Публикация черновика:
/draft/publish

post_id={id поста}
draft_id={id черновика}

200 - OK
400 - нет такого поста/нет такого черновика
404 - пользователь не является автором

--------------------------------------------------------
ПОЛЬЗОВАТЕЛИ
Создание пользователей
/user/create

firstname
lastname
login
pass

200 - OK
400 - логин занят
404 - пользователь уже аутентифицирован
----------------------------------------------------------
Получение своего пользователя
/user/profile

(по токену)

200 - OK
404 - пользователь не аутентифицирован
----------------------------------------------------------
----------------------------------------------------------
Комментарии

----------------------------------------------------------
/comments/create

post_id={post_id}
content={текст}

200 - OK
404 - пост не найден
----------------------------------------------------------
/comments/get

post_id={post_id}

200 - OK
404 - пост не найден
----------------------------------------------------------

/comments/delete

comment_id={id коммента}

200 - OK
400 - пользователь не админ и коммент принадлежит не ему
404 - коммент не найден

-----------------------------------------------------------
Аутентификация

/auth

login={текст}
pass={текст}

200 - OK
400 - пользователя не существует










------------------------------------------------

Структура базы данных:

1) Таблицы с сущностями:

User
user_id, firstname, lastname, image, login, pass_hash, creation_date, is_admin (bool)

Author
author_id, user_id, description

Category
category_id, parent_category_id

Tag
tag_id, name

Post
post_id, title, creation_date, author_id, category_id, content, photo, extra_photos

Comment
comment_id, post_id, text

Draft
draft_id, post_id, content

2) Таблицы связей

//User_Author
//user_id, author_id

Post_Tag
post_id, tag_id
















